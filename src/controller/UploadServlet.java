package controller;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.util.List;
import java.util.UUID;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.commons.fileupload.FileItem;
import org.apache.commons.fileupload.disk.DiskFileItemFactory;
import org.apache.commons.fileupload.servlet.ServletFileUpload;
import javax.servlet.annotation.WebServlet;
import bean.Homework;
import dao.HomeworkDao;

@WebServlet("/fileupload")
public class UploadServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;
	
	public void doPost(HttpServletRequest request, 
			HttpServletResponse response)
	throws ServletException, IOException {
		//得到上传文件的保存目录
		String savePath = this.getServletContext().getRealPath("/upload");
		File file = new File(savePath);
		//判断上传文件的保存目录是否存在
		if (!file.exists() && !file.isDirectory()) {
				file.mkdir();
		}
		
		Homework homework=new Homework();
		HomeworkDao homeworkDao=new HomeworkDao();
		//消息提示
		String message = "未选择文件！";
		try{
			homework.setCno(request.getParameter("cno"));
			homework.setTerm(request.getParameter("term"));
			homework.setSno(request.getParameter("sno"));
			homework.setTno(request.getParameter("tno"));
			homework.setTitle(request.getParameter("title"));
			
			//使用Apache文件上传组件处理文件上传步骤：
			//1、创建一个DiskFileItemFactory工厂
			DiskFileItemFactory factory = new DiskFileItemFactory();
			//2、创建一个文件上传解析器
			ServletFileUpload upload = new ServletFileUpload(factory);
			//解决上传文件名的中文乱码
			upload.setHeaderEncoding("UTF-8"); 
			//3、判断提交上来的数据是否是上传表单的数据
			if(!ServletFileUpload.isMultipartContent(request)){
				//按照传统方式获取数据
				return;
			}
			
			//4、使用ServletFileUpload解析器解析上传数据，解析结果返回的是一个List<FileItem>集合，每一个FileItem对应一个Form表单的输入项
			List<FileItem> list = upload.parseRequest(request);
			for(FileItem item : list){
				//如果fileitem中封装的是普通输入项的数据
				if(item.isFormField()){
					continue;
				}else{//如果fileitem中封装的是上传文件
					//得到上传的文件名称，
					String filename = item.getName();
					if(filename==null || filename.trim().equals("")){
						continue;
					}
					//处理获取到的上传文件的文件名的路径部分，只保留文件名部分
					filename = filename.substring(filename.lastIndexOf("\\")+1);
					//获取item中的上传文件的输入流
					InputStream in = item.getInputStream();
					//得到文件保存的名称
					String saveFilename = makeFileName(filename);
					//得到文件保存的路径
					String filepath=savePath + "\\" + saveFilename;
					//创建一个文件输出流
					FileOutputStream out = new FileOutputStream(filepath);
					//创建一个缓冲区
					byte buffer[] = new byte[1024];
					//判断输入流中的数据是否已经读完的标识
					int len = 0;
					//循环将输入流读入到缓冲区当中，(len=in.read(buffer))>0就表示in里面还有数据
					while((len=in.read(buffer))>0){
						//使用FileOutputStream输出流将缓冲区的数据写入到指定的目录(savePath + "\\" + filename)当中
						out.write(buffer, 0, len);
					}
					//关闭输入流
					in.close();
					//关闭输出流
					out.close();
					//删除处理文件上传时生成的临时文件
					item.delete();
					
					homework.setAnswer(filename);
					homework.setFilepath(filepath);
					boolean success=homeworkDao.updateAnswer(homework);//更新答案
					if(success) {
						message="提交成功！";
					}else {
						message="提交失败！";
					}
				}
			}
		}catch (Exception e) {
			message= "提交失败！";
			e.printStackTrace();
		}
		request.setAttribute("message",message);
		request.getRequestDispatcher("/result.jsp").forward(request, response);
	}
	
	private String makeFileName(String filename){
		//为防止文件覆盖的现象发生，要为上传文件产生一个唯一的文件名
		return UUID.randomUUID().toString() + "_" + filename;
	}
}
